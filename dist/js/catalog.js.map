{"version":3,"names":[],"mappings":"","sources":["catalog.js"],"sourcesContent":["\r\nlet closeRightSidebar = document.querySelector('.closeRightSidebar');\r\n\r\nlet RightSideMenu = document.querySelector('.filter-right');\r\n\r\nlet rightFilterTrigger = document.querySelectorAll('.filter-item');\r\n\r\nrightFilterTrigger.forEach((triggerBtn)=>{\r\n  triggerBtn.addEventListener('click', (e)=>{\r\n      RightSideMenu.classList.add('active');\r\n      overflowDarken.style.opacity = 1;\r\n      overflowDarken.style.height = \"100rem\";\r\n      overflowDarken.style.pointerEvents  = \"initial\"; \r\n      body.style.overflowY = \"hidden\";\r\n      body.classList.add(\"active-right\")  ;  \r\n\r\n    //find data-attr on clicked element\r\n    let activeFilter = e.currentTarget.dataset.filtername; \r\n\r\n    //choose filter item with data-attributes\r\n    let filterItem = document.querySelectorAll('[data-CatalogFilterName]');\r\n\r\n    // check each of filter for contain clicked menu's attribite\r\n    //compare them and open \r\n    filterItem.forEach((fi)=> {\r\n        \r\n        let filterData = fi.dataset.catalogfiltername;\r\n        // console.log(filterData);       \r\n        \r\n        if (filterData === activeFilter){\r\n            // console.log(fi);\r\n            fi.querySelector('.mobile-main-menu').classList.add('open');\r\n        }\r\n    });\r\n  });\r\n})\r\n\r\n\r\ncloseRightSidebar.addEventListener('click', ()=>{\r\n  RightSideMenu.classList.remove('active');\r\n  overflowDarken.style.opacity = \"0\";\r\n  overflowDarken.style.height = \"0\";\r\n  overflowDarken.style.pointerEvents  = \"none\";\r\n  mobileItem.forEach((mi)=>{\r\n        mi.classList.remove('open');    \r\n   }) ;\r\n   body.style.overflowY = \"auto\";\r\n   body.classList.remove(\"active-right\")  ;  \r\n\r\n});\r\n\r\noverflowDarken.addEventListener('click', ()=>{\r\n    RightSideMenu.classList.remove('active');\r\n    overflowDarken.style.opacity = \"0\";\r\n    overflowDarken.style.height = \"0\";\r\n    overflowDarken.style.pointerEvents  = \"none\";\r\n    mobileItem.forEach((mi)=>{\r\n        mi.classList.remove('open');    \r\n   }) ;\r\n   body.style.overflowY = \"auto\";\r\n   body.classList.remove(\"active-right\")  ;  \r\n  \r\n  });\r\n\r\n\r\n  let mobileItem = document.querySelectorAll('.mobile-main-menu');\r\n  let elemForHideSkroll = document.querySelector('.sidenav');\r\n  let bodyTag = document.querySelector(\"#body\");\r\n  \r\n  \r\n  mobileItem.forEach(it => {\r\n      it.addEventListener('click', e => {\r\n        //   console.log( e.currentTarget.classList.contains('open'));\r\n\r\n          let current = e.currentTarget;\r\n          let block = current.querySelector(\".hidden-mobile-submenu\");\r\n        \r\n          if(current.classList.contains('open')){\r\n            if (e.target.closest('.hidden-mobile-submenu') == block){\r\n                return false;\r\n            }\r\n\r\n            current.classList.remove('open');\r\n            elemForHideSkroll.style.overflow = \"auto\";\r\n            RightSideMenu.style.overflow = \"auto\";\r\n            // bodyTag.style.paddingRight = \"70px\"\r\n          } else {\r\n            if (!current.classList.contains('open'))\r\n            // RightSideMenu.style.overflow  = \"hidden\";\r\n                current.classList.add('open');\r\n            elemForHideSkroll.style.overflow = \"hidden\";\r\n          }\r\n      });\r\n  });\r\n\r\n  const swiper = new Swiper('.swiper', {\r\n    // Optional parameters\r\n    direction: 'horizontal',\r\n    // loop: true,\r\n    spaceBetween: 7,\r\n    slidesPerView: 2,\r\n    breakpoints: {\r\n        // when window width is >= 320px\r\n        320: {\r\n            slidesPerView: 3,\r\n            spaceBetween: 4,\r\n  \r\n          },\r\n        340: {\r\n          slidesPerView: 3,\r\n          spaceBetween: 12,\r\n\r\n        },\r\n        520: {\r\n            slidesPerView: 3,\r\n            spaceBetween: 12,\r\n  \r\n          },\r\n        720: {\r\n            slidesPerView: 5,\r\n            spaceBetween: 12,\r\n  \r\n          },\r\n          920: {\r\n            slidesPerView: 6,\r\n            spaceBetween: 12,\r\n  \r\n          },\r\n        // when window width is >= 480px\r\n        // when window width is >= 640px\r\n\r\n        1100: {\r\n            slidesPerView: 6,\r\n            spaceBetween: 7,\r\n  \r\n          },\r\n        1300: {\r\n            spaceBetween:22,\r\n            slidesPerView: 8,\r\n\r\n          }\r\n      },\r\n  \r\n    // If we need pagination\r\n    // pagination: {\r\n    //   el: '.swiper-pagination',\r\n    // },\r\n  \r\n    // Navigation arrows\r\n    navigation: {\r\n      nextEl: '.swiper-button-next',\r\n      prevEl: '.swiper-button-prev',\r\n    },\r\n  \r\n    // And if we need scrollbar\r\n   \r\n  }); \r\n\r\n// $('.brand-slider').slick({\r\n//     dots: false,\r\n//     infinite: true,\r\n//     slidesToShow: 7,\r\n//     slidesToScroll:4,\r\n//     margin: 10,\r\n//     arrows: false,    \r\n//     responsive: [\r\n//         {\r\n//           breakpoint: 1200,\r\n//           settings: {\r\n//             slidesToShow: 5,\r\n//             slidesToScroll: 2,\r\n//             infinite: true,\r\n//             dots: false\r\n//           }\r\n//         },\r\n//         {\r\n//             breakpoint: 890,\r\n//             settings: {\r\n//               slidesToShow: 5,\r\n//               slidesToScroll: 2,\r\n//               infinite: true,\r\n//               dots: false,\r\n//             }\r\n//           },\r\n//           {\r\n//             breakpoint: 650,\r\n//             settings: {\r\n//               slidesToShow:4,\r\n//               slidesToScroll: 2,\r\n//               infinite: true,\r\n//               dots: false,\r\n//             }\r\n//           },\r\n//           {\r\n//             breakpoint: 365,\r\n//             settings: {\r\n//               slidesToShow: 3,\r\n//               slidesToScroll: 1,\r\n//               infinite: true,\r\n//               dots: false,\r\n//             }\r\n//           },\r\n//     ],\r\n//   });\r\n  \r\n  \r\n  \r\n\r\n  \r\n  \r\n  let oftenSlider = document.querySelector('.often-find-wrap');\r\n  \r\n  $('.often-find-wrap').slick({\r\n    dots: false,\r\n    infinite: true,\r\n    slidesToShow: 8,\r\n    slidesToScroll: 2,\r\n    margin: 10,\r\n    arrows: false,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 7,\r\n          slidesToScroll: 2,\r\n          infinite: true,\r\n          dots: false\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 760,\r\n        settings: {\r\n          slidesToShow: 6,\r\n          slidesToScroll: 2,\r\n          infinite: true,\r\n          dots: false\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 500,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 2,\r\n          infinite: true,\r\n          dots: false\r\n        }\r\n      },\r\n      \r\n  ],\r\n    \r\n  \r\n  },\r\n  );\r\n\r\n\r\n  var stepsSlider = document.getElementById('steps-slider');\r\n  var input0 = document.getElementById('input-with-keypress-0');\r\n  var input1 = document.getElementById('input-with-keypress-1');\r\n  var inputs = [input0, input1];\r\n  \r\n  noUiSlider.create(stepsSlider, {\r\n      start: [20, 50000],\r\n      connect: true,\r\n      tooltips: false,\r\n      range: {\r\n          'min': [0],\r\n          'max': 10000\r\n      }\r\n  });\r\n  \r\n  stepsSlider.noUiSlider.on('update', function (values, handle) {\r\n      inputs[handle].value = values[handle];\r\n  });\r\n  \r\n\r\n// Listen to keydown events on the input field.\r\ninputs.forEach(function (input, handle) {\r\n\r\n    input.addEventListener('change', function () {\r\n        stepsSlider.noUiSlider.setHandle(handle, this.value);\r\n    });\r\n  \r\n    input.addEventListener('keydown', function (e) {\r\n  \r\n        let values = stepsSlider.noUiSlider.get();\r\n        var value = Number(values[handle]);\r\n  \r\n        // [[handle0_down, handle0_up], [handle1_down, handle1_up]]\r\n        var steps = stepsSlider.noUiSlider.steps();\r\n  \r\n        // [down, up]\r\n        var step = steps[handle];\r\n  \r\n        var position;\r\n  \r\n        // 13 is enter,\r\n        // 38 is key up,\r\n        // 40 is key down.\r\n        switch (e.which) {\r\n  \r\n            case 13:\r\n                stepsSlider.noUiSlider.setHandle(handle, this.value);\r\n                break;\r\n  \r\n            case 38:\r\n  \r\n                // Get step to go increase slider value (up)\r\n                position = step[1];\r\n  \r\n                // false = no step is set\r\n                if (position === false) {\r\n                    position = 1;\r\n                }\r\n  \r\n                // null = edge of slider\r\n                if (position !== null) {\r\n                    stepsSlider.noUiSlider.setHandle(handle, value + position);\r\n                }\r\n  \r\n                break;\r\n  \r\n            case 40:\r\n  \r\n                position = step[0];\r\n  \r\n                if (position === false) {\r\n                    position = 1;\r\n                }\r\n  \r\n                if (position !== null) {\r\n                    stepsSlider.noUiSlider.setHandle(handle, value - position);\r\n                }\r\n  \r\n                break;\r\n        }\r\n    });\r\n  });\r\n  \r\n\r\n\r\n  var x, i, j, l, ll, selElmnt, a, b, c;\r\n/* Look for any elements with the class \"custom-select\": */\r\nx = document.getElementsByClassName(\"custom-select\");\r\nl = x.length;\r\nfor (i = 0; i < l; i++) {\r\n  selElmnt = x[i].getElementsByTagName(\"select\")[0];\r\n  ll = selElmnt.length;\r\n  /* For each element, create a new DIV that will act as the selected item: */\r\n  a = document.createElement(\"DIV\");\r\n  a.setAttribute(\"class\", \"select-selected\");\r\n  a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;\r\n  x[i].appendChild(a);\r\n  /* For each element, create a new DIV that will contain the option list: */\r\n  b = document.createElement(\"DIV\");\r\n  b.setAttribute(\"class\", \"select-items select-hide\");\r\n  for (j = 1; j < ll; j++) {\r\n    /* For each option in the original select element,\r\n    create a new DIV that will act as an option item: */\r\n    c = document.createElement(\"DIV\");\r\n    c.innerHTML = selElmnt.options[j].innerHTML;\r\n    c.addEventListener(\"click\", function(e) {\r\n        /* When an item is clicked, update the original select box,\r\n        and the selected item: */\r\n        var y, i, k, s, h, sl, yl;\r\n        s = this.parentNode.parentNode.getElementsByTagName(\"select\")[0];\r\n        sl = s.length;\r\n        h = this.parentNode.previousSibling;\r\n        for (i = 0; i < sl; i++) {\r\n          if (s.options[i].innerHTML == this.innerHTML) {\r\n            s.selectedIndex = i;\r\n            h.innerHTML = this.innerHTML;\r\n            y = this.parentNode.getElementsByClassName(\"same-as-selected\");\r\n            yl = y.length;\r\n            for (k = 0; k < yl; k++) {\r\n              y[k].removeAttribute(\"class\");\r\n            }\r\n            this.setAttribute(\"class\", \"same-as-selected\");\r\n            break;\r\n          }\r\n        }\r\n        h.click();\r\n    });\r\n    b.appendChild(c);\r\n  }\r\n  x[i].appendChild(b);\r\n  a.addEventListener(\"click\", function(e) {\r\n    /* When the select box is clicked, close any other select boxes,\r\n    and open/close the current select box: */\r\n    e.stopPropagation();\r\n    closeAllSelect(this);\r\n    this.nextSibling.classList.toggle(\"select-hide\");\r\n    this.classList.toggle(\"select-arrow-active\");\r\n  });\r\n}\r\n\r\nfunction closeAllSelect(elmnt) {\r\n  /* A function that will close all select boxes in the document,\r\n  except the current select box: */\r\n  var x, y, i, xl, yl, arrNo = [];\r\n  x = document.getElementsByClassName(\"select-items\");\r\n  y = document.getElementsByClassName(\"select-selected\");\r\n  xl = x.length;\r\n  yl = y.length;\r\n  for (i = 0; i < yl; i++) {\r\n    if (elmnt == y[i]) {\r\n      arrNo.push(i)\r\n    } else {\r\n      y[i].classList.remove(\"select-arrow-active\");\r\n    }\r\n  }\r\n  for (i = 0; i < xl; i++) {\r\n    if (arrNo.indexOf(i)) {\r\n      x[i].classList.add(\"select-hide\");\r\n    }\r\n  }\r\n}\r\n\r\n/* If the user clicks anywhere outside the select box,\r\nthen close all select boxes: */\r\ndocument.addEventListener(\"click\", closeAllSelect);"],"file":"catalog.js"}